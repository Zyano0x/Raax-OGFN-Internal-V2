#include "exploittick.h"

#include <cheat/cache/pickupcache.h>
#include <cheat/core.h>
#include <drawing/drawing.h>
#include <config/config.h>

namespace Tick
{
namespace Exploits 
{


void TickGameThread() {
    const auto&     ExploitConfig = Config::g_Config.ExploitsConfig;
    SDK::AFortPlayerPawnAthena* LocalPawn = SDK::Cast<SDK::AFortPlayerPawnAthena>(SDK::GetLocalPawn());

    if (LocalPawn && LocalPawn->CurrentWeapon()) {
        if (ExploitConfig.RapidFire) {
            float a = 0;
            float b = 0;
            a = LocalPawn->CurrentWeapon()->LastFireTime();
            b = LocalPawn->CurrentWeapon()->LastFireTimeVerified();
            LocalPawn->CurrentWeapon()->Set_LastFireTime(a + b - 0.3f);
        }

        if (ExploitConfig.NoSpread) {
            LocalPawn->CurrentWeapon()->Set_CustomTimeDilation(99);
        } else {
            LocalPawn->CurrentWeapon()->Set_CustomTimeDilation(1);
        }

        if (LocalPawn->CurrentWeapon() && LocalPawn->CurrentWeapon()->WeaponData() && ExploitConfig.MakeEveryWeaponAutomatic) {
            LocalPawn->CurrentWeapon()->WeaponData()->SetTriggerType(SDK::EFortWeaponTriggerType::Automatic);
        }


    }

    if (LocalPawn && ExploitConfig.InstantRevive) {
        LocalPawn->Set_ReviveFromDBNOTime(1.f);
    }


}


}
}


